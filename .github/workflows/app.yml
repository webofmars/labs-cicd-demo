name: build

on: [push]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install modules
      run: yarn install --dev
    - name: install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
    - name: build Assets
      run: |
        yarn encore dev
        yarn encore production
    - name: create artifact
      run: tar -zcvf artifact.tar.gz assets bin node_modules public var vendor
    - name: upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: artifact.tar.gz

  tests:
    env:
      DATABASE_URL: "mysql://root:root@127.0.0.1:3306/app?serverVersion=5.7"
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: restore artifact
      run: tar -zxvf artifact/artifact.tar.gz && rm artifact/artifact.tar.gz
    - name: unit tests
      run: php bin/phpunit ./tests/unit-tests
    - name: functional tests
      run: php bin/phpunit ./tests/functionnal-tests

  deploy_stg:
    runs-on: ubuntu-latest
    needs:
    - build
    - tests
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: restore artifact
      run: tar -zxvf artifact/artifact.tar.gz && rm artifact/artifact.tar.gz
    - name: start deployment
      uses: bobheadxi/deployments@v0.2.0
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: staging
    - name: copy file via ssh
      uses: appleboy/scp-action@master
      with:
        host: apdemo-stg.wmars.space
        username: ${{ secrets.SSH_REMOTE_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "."
        target: "/srv/staging/"
    - name: update deployment status
      uses: bobheadxi/deployments@v0.2.0
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
